WITH RankedParties AS (
    SELECT
        mo.Номер_модели,
        mo.Отливка AS Отливка_ремонта,
        mo.Дата AS Дата_прибытия_из_ремонта,
        bm.Номер_партии,
        pl.Дата AS Дата_разливки,
        pd.Итог AS Количество_брака,
        gc.Количество_годных_отливок,
        CASE
            WHEN (pd.Итог + gc.Количество_годных_отливок) > 0 THEN
                ROUND(
                    (pd.Итог * 100.0) / (pd.Итог + gc.Количество_годных_отливок),
                    2
                )
            ELSE
                NULL
        END AS Процент_брака,
        ROW_NUMBER() OVER (
            PARTITION BY mo.Номер_модели, mo.Дата
            ORDER BY pl.Дата DESC
        ) AS rn
    FROM
        model_operations mo
    JOIN
        batch_matching bm ON mo.Отливка = bm.Отливка
    JOIN
        pouring_list pl ON bm.Номер_разливки = pl.Номер_разливки
    LEFT JOIN
        production_defects pd ON bm.Номер_партии = pd.Номер_партии AND bm.Отливка = pd.Отливка
    LEFT JOIN
        good_castings gc ON bm.Номер_партии = gc.Номер_партии AND bm.Отливка = gc.Отливка
    WHERE
        mo.Вид_работ = 'прибытие из ремонта'
        AND pl.Дата < mo.Дата
        AND pl.Дата >= datetime(mo.Дата, '-2 months')
)
SELECT
    Номер_модели,
    Отливка_ремонта,
    Дата_прибытия_из_ремонта,
    Номер_партии,
    Дата_разливки,
    Количество_брака,
    Количество_годных_отливок,
    Процент_брака
FROM
    RankedParties
WHERE
    rn <= 10
ORDER BY
    Дата_прибытия_из_ремонта DESC,
    Дата_разливки DESC;
